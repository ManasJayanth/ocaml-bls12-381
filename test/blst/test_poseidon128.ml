let test_consistent_with_mec () =
  let test_vectors =
    [ ( [| "26220624956959285725992525915931330099055855809419283071707941601749666540606";
           "19540886853600136773806888540031779652697522926951761090609474934921975120659";
           "27368034540955591518185075247638312229509481411752400387472688330662143761856"
        |],
        [| "43511205630611772907305808512474102611984131203421236810515704700152949047224";
           "48404483885061725830813593552683405158426386147903191267014379564309723030569";
           "45455508345790033836828236232648857503212460606281822240719783924973985954240"
        |] );
      ( [| "14990895240018155420388973968063729735246061536340426651548494721699138380965";
           "27079498335589470388559429012071885383086029562052523482197446658383111072774";
           "42808036164195249275280963312025828986508786508614910971333518929197538998773"
        |],
        [| "40850263519219902192114370129204417400479699028697057057199201504672551505252";
           "48074935621797902840506088008863112091066629644315102354094271461317146257907";
           "50917817175829577484267059841829608785562300181271977429646730081284784874062"
        |] );
      ( [| "47423698069712605224841670609380371671088793305500940662771393607938414368429";
           "2280773603130921897588628948561054337050485605305725986334019017364524534576";
           "49742584797721038216392695876666332237687899609664289853866233942594829409245"
        |],
        [| "10352438313661819041416737223932655312442210590290221789717963416032446667922";
           "12416770463917986285793114123083790702069545522179871554216904058454221063871";
           "8690948874500940254830349485571632542714218419334677073173914897794735407130"
        |] );
      ( [| "10870683823116872795966380888874121455438266611654035875119471621270456822560";
           "47345255170739768354940339244069904962490289137071838723660628082786560244227";
           "12508134994244913485311518548620293355291296251148491744230743543606532994206"
        |],
        [| "40821728439695886060663244207239880540770877952391805190523008729930953312545";
           "32757302415610111055172336341622083304889586409304040419717756288259370713079";
           "9866992798424107747407779648166884795037159546051475099967619794472776599928"
        |] );
      ( [| "31697087223714082052259300980299088907621915678980456038436840376093621770540";
           "22266149478348354835731057366322705807112053199389518651299197937563769914341";
           "46391019025260596444368872653036215340017923491388854958773789052412558961328"
        |],
        [| "29971311954511007105608331151972950929311365197596673789439107675995686307852";
           "6771751317924220428771684134773801955230796471050257234105657500425383800763";
           "42930813975694170348499436984509183669746743401412000351259407232528815580524"
        |] ) ]
  in
  List.iter
    (fun (inputs, expected_output) ->
      let inputs = Array.map Bls12_381.Fr.of_string inputs in
      let expected_output = Array.map Bls12_381.Fr.of_string expected_output in
      Bls12_381.Poseidon128.constants_init Ark128.v Mds128.v ;
      let ctxt = Bls12_381.Poseidon128.init inputs in
      let () = Bls12_381.Poseidon128.apply_perm ctxt in
      let output = Bls12_381.Poseidon128.get ctxt in
      Array.iter2
        (fun a b ->
          if not (Bls12_381.Fr.eq a b) then
            Alcotest.failf
              "Expected output is %s, computed %s\n"
              (Bls12_381.Fr.to_string a)
              (Bls12_381.Fr.to_string b))
        expected_output
        output)
    test_vectors

let () =
  let open Alcotest in
  run
    "Poseidon128"
    [ ( "Consistency with MEC",
        [test_case "vectors" `Quick test_consistent_with_mec] ) ]

let () = Bls12_381.Poseidon128.finalize ()
