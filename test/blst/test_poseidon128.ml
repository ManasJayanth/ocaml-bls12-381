let test_consistent_with_mec () =
  let test_vectors =
    [ ( [| "26220624956959285725992525915931330099055855809419283071707941601749666540606";
           "19540886853600136773806888540031779652697522926951761090609474934921975120659";
           "27368034540955591518185075247638312229509481411752400387472688330662143761856"
        |],
        [| "24920841281008162813463753546420935049495146749439681859239348911541126103308";
           "42756985489265262382351678452579306050341412453039995262236451730782196398927";
           "19725897316482887244221888815632669076678228346469812820002403740988424823843"
        |] );
      ( [| "14990895240018155420388973968063729735246061536340426651548494721699138380965";
           "27079498335589470388559429012071885383086029562052523482197446658383111072774";
           "42808036164195249275280963312025828986508786508614910971333518929197538998773"
        |],
        [| "27066447731444953011839849792038111632057752713404581250309491417611453252092";
           "51768030608384132702922994034399076685899603600913079043026741649354526181220";
           "26061562532361519607665070371870105948137740339261761060523148354346789065425"
        |] );
      ( [| "47423698069712605224841670609380371671088793305500940662771393607938414368429";
           "2280773603130921897588628948561054337050485605305725986334019017364524534576";
           "49742584797721038216392695876666332237687899609664289853866233942594829409245"
        |],
        [| "14072322586724923688959269047527669836172071210873587596342662399344946119542";
           "8987024832386468888973210729172845810425828005259874524883141779962003931884";
           "27667469714011102116432494966059531183171989258891912109609994984223128912060"
        |] );
      ( [| "10870683823116872795966380888874121455438266611654035875119471621270456822560";
           "47345255170739768354940339244069904962490289137071838723660628082786560244227";
           "12508134994244913485311518548620293355291296251148491744230743543606532994206"
        |],
        [| "31299947052138672836115000016970957828358661768961541010780016169390964677901";
           "18107651855005538923860822334173933695855393594252704567408516798688755334239";
           "2725020859633108616990410119936982754278171107074771312364232435567723443242"
        |] );
      ( [| "31697087223714082052259300980299088907621915678980456038436840376093621770540";
           "22266149478348354835731057366322705807112053199389518651299197937563769914341";
           "46391019025260596444368872653036215340017923491388854958773789052412558961328"
        |],
        [| "23746719238503951539251813447124389156634466511465451904349922180058618938516";
           "49668168189771629907829729570380428187966639744931285381266882169260202106422";
           "11958655436148906609798038393052069022372794735172011999956516179355560975808"
        |] ) ]
  in
  List.iter
    (fun (inputs, expected_output) ->
      let inputs = Array.map Bls12_381.Fr.of_string inputs in
      let expected_output = Array.map Bls12_381.Fr.of_string expected_output in
      Bls12_381.Poseidon128.constants_init Ark128.v Mds128.v ;
      let ctxt = Bls12_381.Poseidon128.init inputs in
      let () = Bls12_381.Poseidon128.apply_perm ctxt in
      let output = Bls12_381.Poseidon128.get ctxt in
      Array.iter2
        (fun a b ->
          if not (Bls12_381.Fr.eq a b) then
            Alcotest.failf
              "Expected output is %s, computed %s\n"
              (Bls12_381.Fr.to_string a)
              (Bls12_381.Fr.to_string b))
        expected_output
        output)
    test_vectors

let () =
  let open Alcotest in
  run
    "Poseidon128"
    [ ( "Consistency with MEC",
        [test_case "vectors" `Quick test_consistent_with_mec] ) ]
